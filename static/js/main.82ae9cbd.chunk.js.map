{"version":3,"sources":["App.tsx","GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","getReorderedGoods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","App","useState","NONE","handleSortType","handleReverse","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECfQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SACGA,GADMA,WDFJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdJ,EADK,GAGJ,IADCK,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOP,GAmBzB,OAjBAO,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKP,EAASa,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKZ,EAASe,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAlCJT,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAMkB,EAAgB,WAC3B,MAAmCC,mBAASnB,EAASoB,MAArD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBc,EAAnB,KASA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYlB,IAAaP,EAASa,UAGtCa,QAnBe,kBAAML,EAAerB,EAASa,UAW/C,iCAaA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYlB,IAAaP,EAASe,SAGtCW,QA/Ba,kBAAML,EAAerB,EAASe,SAuB7C,4BAaA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAfjB,IAGhBkB,QA3CQ,kBAAMJ,GAAed,IAmC/B,sBAaED,IAAaP,EAASoB,OAAuB,IAAfZ,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAnDI,WACZL,EAAerB,EAASoB,MACxBE,GAAc,IA8CR,sBASJ,cAAC,EAAD,CAAUpB,MAAOI,EACfD,EACC,CACCE,WACAC,qBExHVmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.82ae9cbd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodList } from './GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, handleSortType] = useState(SortType.NONE);\n  const [isReversed, handleReverse] = useState(false);\n  const sortByAlphabet = () => handleSortType(SortType.ALPABET);\n  const sortByLength = () => handleSortType(SortType.LENGTH);\n  const reverse = () => handleReverse(!isReversed);\n  const reset = () => {\n    handleSortType(SortType.NONE);\n    handleReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': isReversed === false,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed === true) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodList goods={getReorderedGoods(\n        goodsFromServer,\n        ({\n          sortType,\n          isReversed,\n        }),\n      )}\n      />\n    </div>\n  );\n};\n","type Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    <ul>\n      {goods.map((good) => (\n        <li key={good} data-cy=\"Good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}